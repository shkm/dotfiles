set hlsearch
set surround
set argtextobj
set highlightedyank
set ideajoin
set which-key
set notimeout
set commentary
set matchit
set NERDTree
set exchange
set relativenumber
set number

set clipboard+=unnamed

let mapleader = "\<Space>"

nnoremap <Leader><TAB> <C-S-6>
nnoremap - :NERDTree<CR>

" Remap 0 to ^ (first char in line)
nnoremap 0 ^

" Switch ;/: for easier command entry.
nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;

nnoremap <silent> <C-h> <C-w><C-h>
nnoremap <silent> <C-j> <C-w><C-j>
nnoremap <silent> <C-k> <C-w><C-k>
nnoremap <silent> <C-l> <C-w><C-l>
nmap <C-p> <Action>(SearchEverywhere)
vmap <C-p> <Action>(SearchEverywhere)

nmap <leader>/ <Action>(FindInPath)
nmap <leader>ff <Action>(GotoFile)

nmap <leader>gb <Action>(Annotate)

nmap <leader>bf <Action>(Switcher)

nmap <leader>xd <Action>(Debug)
nmap <leader>xr <Action>(Run)
nmap <leader>X <Action>(Rerun)

nmap <leader>dp <Action>(ToggleLineBreakpoint)

nmap <leader>rq <Action>(Refactorings.QuickListPopupAction)
vmap <leader>rq <Action>(Refactorings.QuickListPopupAction)

nmap <leader>rr <Action>(RenameElement)
vmap <leader>rr <Action>(RenameElement)

vmap ]m <Action>(MethodDown)
vmap [m <Action>(MethodUp)
vmap ]m <Action>(MethodDown)
vmap [m <Action>(MethodUp)

" nnoremap % <Action>EditorMatchBrace
" vnoremap % <Action>EditorMatchBrace

map gh <Action>(ShowErrorDescription)
vmap gh <Action>(ShowErrorDescription)
