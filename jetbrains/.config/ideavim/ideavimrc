set hlsearch
set surround
set argtextobj
set highlightedyank
set ideajoin
set which-key
set notimeout
set commentary
set matchit
set NERDTree
set exchange
set relativenumber
set number

set clipboard+=unnamed

let mapleader = "\<Space>"

nnoremap <Leader><TAB> <C-S-6>
nnoremap - :NERDTree<CR>

" Remap 0 to ^ (first char in line)
nnoremap 0 ^

" Switch ;/: for easier command entry.
nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;

nnoremap <silent> <C-h> <C-w><C-h>
nnoremap <silent> <C-j> <C-w><C-j>
nnoremap <silent> <C-k> <C-w><C-k>
nnoremap <silent> <C-l> <C-w><C-l>
nmap <C-p> <Action>(SearchEverywhere)
vmap <C-p> <Action>(SearchEverywhere)

nmap <leader>/ <Action>(FindInPath)
nmap <leader>ff <Action>(GotoFile)

nmap <leader>bf <Action>(Switcher)

nmap <leader>xd <Action>(Debug)
nmap <leader>xr <Action>(Run)
nmap <leader>X <Action>(Rerun)

let g:WhichKeyDesc_Debug= "<Space>d +debug"
let g:WhichKeyDesc_Debug_Breakpoint = "<Space>dp Toggle breakpoint"
nmap <leader>dp <Action>(ToggleLineBreakpoint)

let g:WhichKeyDesc_Refactor = "<Space>r +refactor"
let g:WhichKeyDesc_Refactor_QuickList = "<Space>rq Refactor quick-list"
nmap <leader>rq <Action>(Refactorings.QuickListPopupAction)
let g:WhichKeyDesc_Refactor_Rename = "<Space>rr Rename"
nmap <leader>rr <Action>(RenameElement)

let g:WhichKeyDesc_Vim = "<Space>v +vim-meta"
let g:WhichKeyDesc_Vim_Reload = "<Space>vr Reload ideavimrc"
nmap <leader>vr <Action>(IdeaVim.ReloadVimRc.reload)

vmap ]m <Action>(MethodDown)
vmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [m <Action>(MethodUp)
nmap [e <Action>(GotoPreviousError)
nmap ]e <Action>(GotoNextError)
vmap [e <Action>(GotoPreviousError)
vmap ]e <Action>(GotoNextError)

" nnoremap % <Action>EditorMatchBrace
" vnoremap % <Action>EditorMatchBrace

map gh <Action>(ShowErrorDescription)
vmap gh <Action>(ShowErrorDescription)

nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gf <Action>(Back)
nmap <leader>gs <Action>(Ruby.GotoTypeSignature)
nmap <leader>gb <Action>(Annotate)

" Which-Key
let g:WhichKey_DefaultDelay = 0
let g:WhichKey_ShowVimActions = "false"
