[user]
  email = jamie@schembri.me
  name = Jamie Schembri
  signingKey = 020DE21E3ECDCFE91B829BA65C963E21C3B452D2
[core]
  excludesfile = ~/.gitignore_global
  editor = nvim
  pager = "delta"
  commentChar = ~
  ignorecase = false
  autocrlf = input
[color]
  ui = true
[alias]
  a  = add
  aa = add -A
  ac = !git add -A && git commit
  acm = !git add -A && git commit -m
  b = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  bd = branch -d
  bD = branch -D
  bmv = branch -m
  c  = commit
  cm  = commit -m
  ca  = commit --amend
  can  = commit --amend --no-edit
  cempty = commit --allow-empty --allow-empty-message -m ''
  cl = clone
  co = checkout
  cf = !fco
  cob = checkout -b

  cp = cherry-pick
  d = diff
  dc = diff --cached
  dh = diff HEAD
  d1 = diff HEAD^
  d2 = diff HEAD^^
  do = "!f() { git remote set-head origin -a && git diff origin/HEAD; }; f"
  dt = difftool
  dta = difftool --dir-diff
  i  = init
  isb = checkout -b
  ld = "!f() { BRANCH=$(git rev-parse --abbrev-ref HEAD); git log origin/$BRANCH..$BRANCH --oneline; }; f"

  lf = log -u
  lg = log --stat --color
  lt = log --graph --decorate --pretty=oneline --abbrev-commit
  ll = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  ls = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  mt = mergetool
  mc = merge --continue
  ma = merge --abort
  pf = push -u --force-with-lease
  pu = push -u
  prune = fetch --prune
  s = status -sbu
  sh = show
  staged = diff --name-only --cached
  stash-all = stash save --include-untracked
  r = rebase
  rc = rebase --continue
  ra = rebase --abort
  rev = rev-parse HEAD
  rs   = reset
  rs1  = reset HEAD^
  rs2  = reset HEAD^^
  rsh  = reset --hard
  rsh1 = reset HEAD^ --hard
  rsh2 = reset HEAD^^ --hard
  tagd = tag --delete 
  tagdr = push --delete origin # remote delete
  tags = tag -n --sort=-authordate

  # Linting
  lr = "!f() { rubocop-git; }; f"
  uncommit = reset --soft HEAD^

[push]
  # Push only the current branch
  default = current
  followTags = true
  autoSetupRemote = true
[status]
  showUntrackedFiles = all
[pull]
  default = current
  ff = only
  rebase = true
[filter "lfs"]
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f
[difftool]
  prompt = false
[difftool "difftool"]
  cmd = difftool "$LOCAL" "$REMOTE"
[diff]
  tool = difftool
[mergetool]
  prompt  = false
[mergetool "mergetool"]
  cmd = mergetool "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
[mergetool "vimdiff"]
  cmd = vimdiff "$LOCAL" "$MERGED" "$REMOTE"
[merge]
  tool = mergetool
[delta]
  side-by-side = true
  syntax-theme = Nord
[init]
  defaultBranch = main
[credential]
  helper = store
[rerere]
  enabled = true
[gui]
[global]

[includeIf "gitdir:~/repos/nedap/"]
  path = .gitconfig-nedap
[fetch]
	parallel = 0
