#!/usr/bin/env bash

# Tries to open a shell in the main docker container (e.g.  it ends in 'app' or 'api')
# Given a param, uses that as a pattern to look for at the end of the container name.
#
# Usage:
#
# dcsh [container_pattern]

set -o errexit      # Exit on most errors (see the manual)
set -o errtrace
set -o nounset      # Disallow expansion of unset variables
set -o pipefail     # Use last non-zero exit code in a pipeline

PATTERN="${1:-ap[pi]}"
ROOT=$(git rev-parse --show-toplevel 2> /dev/null || echo ".")
COMMAND="${2:-command -v bash >/dev/null 2>&1 && bash || sh}"

if [[ -d "${ROOT}/.devcontainer" ]]; then
  cd "${ROOT}/.devcontainer"
else
  cd "${ROOT}"
fi

container=$(docker-compose ps | tail -n +3 | cut -d' ' -f1 | grep "${PATTERN}_[0-9]\+" | sed 's/.*_\(.*\)_.*/\1/')
container=$(docker-compose ps | tail -n +3 | cut -d' ' -f1 | grep "${PATTERN}\(_[0-9]\+\)\?\$" | sed 's/.*_\(.*\)_.*/\1/')

echo "Container: $container"
docker-compose exec $container sh -c "$COMMAND"
